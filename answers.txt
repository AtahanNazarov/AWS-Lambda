Вопрос 1
Каков размер преобразованной модели?

21 Mb
43 Mb ✔
80 Mb
164 Mb

Вопрос 2
Каков индекс выходных данных у данной модели?

3
7
13 ✔
24

Учитывая информацию из вашего предыдущего домашнего задания, каковы должны быть размеры этого изображения? (150, 150)

Вопрос 3
Каково значение в канале R первого пикселя после обработки?

0.3353411
0.5529412 ✔
0.7458824
0.9654902

Вопрос 4
Каков прогноз модели для этого изображения?

0.17049132
0.39009996
0.60146114
0.82448614 ✔

Вопрос 5
Скачайте базовый образ karatayevm/dino-dragon-lambda:latest. Вы можете сделать это с помощью команды docker pull
Итак, каков размер этого базового образа?

139 Mb
329 Mb
639 Mb
929 Mb
Вы можете получить эту информацию, запустив docker images - она будет в столбце "SIZE".

Вопрос 6
Дополнение Docker-образа: Давайте модифицируем существующий Docker-образ, добавив в него необходимые библиотеки и код для lambda.

Модель в образе: Нет необходимости добавлять модель в образ, так как она уже там. Файл модели называется dino-vs-dragon-v2.tflite и расположен в основной директории образа (подробности можно найти в предоставленном Dockerfile).

Запустите обновленный Docker-образ на вашем компьютере.

После запуска контейнера используйте ваш код для анализа изображения по следующей ссылке: https://upload.wikimedia.org/wikipedia/en/e/e9/GodzillaEncounterModel.jpg

Какой результат модели?

0.12
0.32
0.52
0.72
Развертывание на AWS
Теперь вы можете развернуть свою модель на AWS!

Публикация образа: Загрузите ваш Docker-образ в Amazon Elastic Container Registry (ECR).
Создание функции Lambda: Перейдите на AWS и создайте новую функцию Lambda. В качестве источника используйте ваш образ из ECR.
Настройка ресурсов: Увеличьте доступный объем RAM для вашей функции Lambda и установите больший таймаут, чтобы обеспечить достаточно времени для выполнения.
Тестирование: После настройки функции Lambda проведите тестирование, чтобы убедиться в ее корректной работе.
Интеграция с API Gateway: Чтобы сделать вашу функцию Lambda доступной через интернет, создайте новый API на AWS API Gateway и свяжите его с вашей функцией Lambda.
Публикация на Docker Hub
Для вашего понимания, вот инструкции по тому, как мы загрузили наш образ на Docker Hub:

docker build -t dino-dragon-lambda .
docker tag dino-dragon-lambda:latest karatayevm/dino-dragon-lambda:latest
docker push karatayevm/dino-dragon-lambda:latest
Примечание: Перед тем как загрузить образ на Docker Hub, убедитесь, что заменили karatayevm на ваше имя пользователя на Docker Hub.

Отправка результатов